eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgYnVpbGQ6CiAgICBpbWFnZTogcHl0aG9uOjMuNS4xLWFscGluZQogICAgY29tbWFuZHM6CiAgICAgIC0gcGlwIGluc3RhbGwgLS1uby1jYWNoZS1kaXIgLS11cGdyYWRlIHBpcCBzZXR1cHRvb2xzIHdoZWVsIGZsYWtlOAogICAgICAtIGZsYWtlOCBydW5fbWFyYXRob24ucHkKICAgICAgLSBwaXAgd2hlZWwgLXIgcmVxdWlyZW1lbnRzLnR4dCAtLXdoZWVsLWRpcj13aGVlbGRpciAtLWZpbmQtbGlua3M9d2hlZWxkaXIKICAgICAgLSBwaXAgaW5zdGFsbCAtLXVzZS13aGVlbCAtLW5vLWluZGV4IC0tZmluZC1saW5rcz13aGVlbGRpciAtciByZXF1aXJlbWVudHMudHh0CiAgICAgICMgLSBweXRob24gdGVzdC5weQoKICBkb2NrZXI6CiAgICBpbWFnZTogcGx1Z2lucy9kb2NrZXIKICAgIHJlcG86IGUyMGNvL2Ryb25lLW1hcmF0aG9uCiAgICB0YWc6IDAuNQogICAgd2hlbjoKICAgICAgYnJhbmNoOiBkcm9uZS0wLjUKICAgICAgZXZlbnQ6IHB1c2gKCiAgIyBkb2NrZXJfaW5kZXY6CiAgIyAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICMgICByZXBvOiBlMjBjby9kcm9uZS1tYXJhdGhvbgogICMgICB0YWc6IGluZGV2CiAgIyAgIHdoZW46CiAgIyAgICAgYnJhbmNoOiBhZGQtc2VjcmV0LXBhcnNpbmcKICAjICAgICBldmVudDogcHVzaAoKICAjIG1hcmF0aG9uX2luZGV2OgogICMgICBpbWFnZTogZTIwY28vZHJvbmUtbWFyYXRob246aW5kZXYKICAjICAgbWFyYXRob25maWxlOiB0ZXN0YXBwL21hcmF0aG9uLmpzb24KICAjICAgc2VydmVyOiBodHRwOi8vbWFyYXRob24ubWVzb3M6ODA4MAogICMgICB2YWx1ZXM6CiAgIyAgICAgU09NRV9WQUxVRTogJHtTRUNSRVRfVkFMVUV9CiAgIyAgICAgVEFHOiBsYXRlc3QKCiMgVE9ETzogV2UgbmVlZCB0byBmaWd1cmUgb3V0IGhvdyB0byB0ZXN0IHRoaXMgcGFja2FnZS4uLgojIHNlcnZpY2VzOgojICAgbWFyYXRob246CiMgICAgIGltYWdlOiBtZXNvc3BoZXJlL21hcmF0aG9uOnYwLjEzLjAtUkMyCg.TOdFSax01V6u107n6YgsoyewhL5OjujMeIS0Gr5YKvY